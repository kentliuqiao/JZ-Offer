package interview5

import (
	"strings"
)

/*

题目：替换字符串的空格
请实现一个函数，将一个字符串中的每个空格替换成“%20”。
例如，当字符串为We Are Happy.则经过替换之后的字符串为We%20Are%20Happy。

*/

/*
解法1：
从前往后遍历字符串，遇到空格就将空格后面的字符依次向后移动2位（%20刚好三个字符），然后依次插入%20，如此直到字符串结尾即可。但是这种解法的时间复杂度为O(n^2)，因为每次向后移动元素的时间复杂度都为O(n)。
*/

/*
解法2：
先完整的遍历一遍字符串，以统计出空格总数，由此可以计算得到替换之后的字符串的总长度。然后在替换之后的字符串的最后一个位置设置一个指针p2，在原字符串的最后一个字符设置一个指针p1。p1从后往前依次遍历，把每个费空格元素都复制到p2所在位置，复制完成，p1，p2同时往前一位，直到p1遇到空格。此时在p2处依次插入02%，每写入一个没写入一个字符p2向前移动一位，三个字符写入完成，p1也向前移动一位。然后继续上述过程，知道最后p1、p2像鱼，则遍历结束，表明字符串中已经不存在空格了。时间复杂度为O(n)。
*/

func replaceSpace(s string) string {
	if s == "" {
		return ""
	}
	var res strings.Builder // 减少多余的字符串的创建，以节省内存
	for i, b := range s {
		if b == ' ' {
			res.WriteString("%20")
		} else {
			res.WriteByte(s[i])
		}
	}

	return res.String()
}
